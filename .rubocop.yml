# Copyright 2015 Google, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# RubyCop configuration file
#
# RuboCop
# http://batsov.com/rubocop/
#
# Style cops
# http://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style
#
# Lint cops
# http://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint

# Prefer double quotes for consistency (regardless of interpolation)
Style/StringLiterals:
  EnforcedStyle: double_quotes

# Prefer no parentheses for method definitions and invocations
Style/MethodDefParentheses:
  EnforcedStyle: require_no_parentheses

# Use %[ ] for string arrays
# Use %{ } for other delimiters, eg. %{ } sometimes used for multiline strings
Style/PercentLiteralDelimiters:
  Enabled: false

# Always use 2 spaces for indentation
# Sometimes method invokations might be additionally indented for clarity
Style/MultilineMethodCallIndentation:
  Enabled: false

# Unused block arguments are OK
# They can add clarity to code to demonstrate available arguments
Lint/UnusedBlockArgument:
  Enabled: false

# Usage of // or %r{ } is acceptable for regular expressions
# Please use // unless %r{ } adds clarity, eg. slashes used in expression
Style/RegexpLiteral:
  Enabled: false

# Use of parenthesis is optional in nested method calls
# This cop is optional mostly to support RSpec expectations
# If the code sample is: service.add "variable"
# Then the spec can use: expect { service.add "variable" }
Style/NestedParenthesizedCalls:
  Enabled: false

# In production code, yield is prefered over block.call
# For code samples, explicitly calling a block by name can add clarity
Performance/RedundantBlockCall:
  Enabled: false

# Empty line at top of block is sometimes OK, eg. for RSpec describe blocks
Style/EmptyLinesAroundBlockBody:
  Enabled: false

Style/NumericLiterals:
  Enabled: false
Style/SpaceAroundOperators:
  Enabled: false
Style/AccessorMethodName:
  Enabled: false
Metrics/ClassLength:
  Enabled: false
Style/EmptyElse:
  Enabled: false
Style/LineEndConcatenation:
  Enabled: false
Metrics/MethodLength:
  Max: 18
Lint/UselessAssignment:
  Enabled: false
Style/MutableConstant:
  Enabled: false
Lint/ShadowingOuterLocalVariable:
  Enabled: false
Style/BlockDelimiters:
  Enabled: false
Style/ExtraSpacing:
  Enabled: false
Style/Documentation:
  Enabled: false
Style/AlignParameters:
  Enabled: false
Style/DotPosition:
  EnforcedStyle: trailing
Style/WordArray:
  MinSize: 4
Metrics/AbcSize:
  Max: 20
